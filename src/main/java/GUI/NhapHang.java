/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package GUI;

import java.util.List;
import javax.swing.table.DefaultTableModel;
import BLL.*;
import hibernatebanhang.DAL.*;
import java.awt.Color;
import java.awt.Font;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.ItemEvent;
import java.awt.event.ItemListener;
import java.io.File;
import java.util.ArrayList;
import java.util.StringTokenizer;
import javax.swing.*;
import javax.swing.filechooser.FileNameExtensionFilter;


/**
 *
 * @author Hong Xuan
 */
public class NhapHang extends javax.swing.JFrame {

    /**
     * Creates new form NhapHang
     */
     VegetableBLL veBLL = new VegetableBLL();
     CategoryBLL categoryBLL = new CategoryBLL();
     DefaultTableModel table = new DefaultTableModel();
    public int vegetableID = 0;
    JLabel lb;
    public JComboBox<String> cbx;
      public JComboBox<String> cbxFind;
    public NhapHang() {
        initComponents();
        setVisible(true);
        setSize(950, 750);
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        
        this.loadData();
        this.cbx = new JComboBox<String>();
        this.cbx.removeAll();
        this.loadcbx();
        this.getContentPane().add(this.cbx);
        this.cbxfind();
        
    }
    private void cbxfind()
    {
        cbxFind = new JComboBox<String>();
        this.cbxFind.removeAll();
        this.cbxFind.setBounds(700, 90, 150, 30);
        List listCate = this.categoryBLL.loadCategory();
        for(Object i :listCate)
        {
            this.cbxFind.addItem(i.toString());
        }
        
        getContentPane().add(cbxFind);
        cbxFind.addItemListener(new ItemListener(){
            @Override
            public void itemStateChanged(ItemEvent e) {
                List <Vegetable> find = categoryBLL.getCategorybyName(cbxFind.getSelectedItem().toString()).get(0).getListVegetable();
                table.setRowCount(0);
                for (int i = 0; i < find.size(); i++) {
                Vegetable vegetableDTO = find.get(i);
                int vegetableID = vegetableDTO.getVegetableID();
                String categoryName = vegetableDTO.getCatagory().getName();
                String name = vegetableDTO.getVegetableName();
                String Unit = vegetableDTO.getUnit();
                String Amount = vegetableDTO.getAmount()+"";
                String Price = vegetableDTO.getPrice()+"";
                String image = vegetableDTO.getImage();
                Object[] row = {vegetableID, categoryName, name, Unit, Amount, Price,image};
                table.addRow(row);
                 }
        
        tbVegetable.setModel(table);
        
        tbVegetable.setRowHeight(25);
        tbVegetable.getTableHeader().setFont(new Font("Courier New",Font.PLAIN,16));
        tbVegetable.getTableHeader().setBackground(new Color(17,185,255));
            }
            
        });
    }
    private void loadData()
    {
        table.setRowCount(0);
        table.setColumnCount(0);

        table.addColumn("ID");
        table.addColumn("CategoryName");
        table.addColumn("Name");
        table.addColumn("Unit");
        table.addColumn("Amount");
        table.addColumn("Price");
        table.addColumn("Image");
        tbVegetable.setModel(table);
        
        ArrayList<Vegetable> arr = new ArrayList<>();
        arr = veBLL.getALL();
        for (int i = 0; i < arr.size(); i++) {
            Vegetable vegetableDTO = arr.get(i);
            int vegetableID = vegetableDTO.getVegetableID();
            String categoryName = vegetableDTO.getCatagory().getName();
            String name = vegetableDTO.getVegetableName();
            String Unit = vegetableDTO.getUnit();
            String Amount = vegetableDTO.getAmount()+"";
            String Price = vegetableDTO.getPrice()+"";
            String image = vegetableDTO.getImage();
            Object[] row = {vegetableID, categoryName, name, Unit, Amount, Price,image};
            table.addRow(row);
        }
        
        tbVegetable.setModel(table);
        
        tbVegetable.setRowHeight(25);
        tbVegetable.getTableHeader().setFont(new Font("Courier New",Font.PLAIN,16));
        tbVegetable.getTableHeader().setBackground(new Color(17,185,255));
        

    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbVegetable = new javax.swing.JTable();
        btnimport = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        btndelete = new javax.swing.JButton();
        tffind = new javax.swing.JTextField();
        btnfind = new javax.swing.JButton();
        btnexit = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        tfName = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        tfAmount = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        tfUnit = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        tfPrice = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        btnChooseFile = new javax.swing.JButton();
        lbimage = new javax.swing.JLabel();
        btnaddcategory = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        tfFile = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(null);

        tbVegetable = new javax.swing.JTable(){
            public boolean isCellEditable(int row,int column)
            {
                return false;
            }
        };
        tbVegetable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tbVegetable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbVegetableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tbVegetable);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(330, 130, 540, 193);

        btnimport.setText("IMPORT");
        btnimport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnimportActionPerformed(evt);
            }
        });
        getContentPane().add(btnimport);
        btnimport.setBounds(330, 340, 120, 40);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel1.setText("IMPORT PRODUCT");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(360, 20, 160, 45);

        btndelete.setText("DELETE");
        btndelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btndeleteActionPerformed(evt);
            }
        });
        getContentPane().add(btndelete);
        btndelete.setBounds(560, 340, 110, 40);
        getContentPane().add(tffind);
        tffind.setBounds(410, 90, 250, 32);

        btnfind.setText("FIND");
        btnfind.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnfindActionPerformed(evt);
            }
        });
        getContentPane().add(btnfind);
        btnfind.setBounds(330, 90, 70, 32);

        btnexit.setText("EXIT");
        btnexit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnexitActionPerformed(evt);
            }
        });
        getContentPane().add(btnexit);
        btnexit.setBounds(820, 340, 75, 40);

        jLabel2.setText("Name");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(20, 120, 60, 20);

        tfName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfNameActionPerformed(evt);
            }
        });
        getContentPane().add(tfName);
        tfName.setBounds(100, 120, 210, 30);

        jLabel3.setText("Amount");
        getContentPane().add(jLabel3);
        jLabel3.setBounds(20, 160, 60, 20);

        tfAmount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfAmountActionPerformed(evt);
            }
        });
        getContentPane().add(tfAmount);
        tfAmount.setBounds(100, 160, 210, 30);

        jLabel4.setText("Unit");
        getContentPane().add(jLabel4);
        jLabel4.setBounds(20, 200, 60, 20);

        tfUnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfUnitActionPerformed(evt);
            }
        });
        getContentPane().add(tfUnit);
        tfUnit.setBounds(100, 200, 210, 30);

        jLabel5.setText("Price");
        getContentPane().add(jLabel5);
        jLabel5.setBounds(20, 240, 60, 20);

        tfPrice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfPriceActionPerformed(evt);
            }
        });
        getContentPane().add(tfPrice);
        tfPrice.setBounds(100, 240, 210, 30);

        jLabel6.setText("Category");
        getContentPane().add(jLabel6);
        jLabel6.setBounds(20, 80, 60, 20);

        jLabel7.setText("Image");
        getContentPane().add(jLabel7);
        jLabel7.setBounds(20, 280, 60, 20);

        btnChooseFile.setText("File");
        btnChooseFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnChooseFileActionPerformed(evt);
            }
        });
        getContentPane().add(btnChooseFile);
        btnChooseFile.setBounds(240, 280, 70, 30);
        getContentPane().add(lbimage);
        lbimage.setBounds(20, 340, 300, 300);

        btnaddcategory.setText("CATEGORY");
        btnaddcategory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnaddcategoryActionPerformed(evt);
            }
        });
        getContentPane().add(btnaddcategory);
        btnaddcategory.setBounds(690, 340, 110, 40);

        jButton1.setText("RELOAD");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1);
        jButton1.setBounds(460, 340, 80, 40);
        getContentPane().add(tfFile);
        tfFile.setBounds(100, 280, 130, 30);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnimportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnimportActionPerformed
        // TODO add your handling code here:
        String name = tfName.getText();
        if(veBLL.hasVegetable(name) == false)
        {
            int i =JOptionPane.showConfirmDialog(null, "Sản phẩm này chưa tồn tại. bạn có muốn thêm sản phẩm này?","Question", JOptionPane.YES_NO_OPTION);
            //I = 0 -> YES  i = 1 -> no
            if(i ==0)
            {
                if(Integer.parseInt(tfAmount.getText()) <= 0 || Double.parseDouble(tfPrice.getText()) <= 0)
                {
                    JOptionPane.showMessageDialog(null,"Giá trị không hợp lệ < 0");
                    
                }
                else
                {
                    try
                    {
                        Vegetable veg = new Vegetable();
                        veg.setVegetableName(name);
                        veg.setImage(tfFile.getText());
                        veg.setAmount(Integer.parseInt(tfAmount.getText()));
                        veg.setCatagory((Category) categoryBLL.getCategorybyName(String.valueOf(cbx.getSelectedItem())).get(0));
                        System.out.println("Category of Veg : " + veg.getCatagory());
                        veg.setUnit(tfUnit.getText().trim() + "");
                        veg.setImage(tfFile.getText().trim());
                        veg.setPrice(Double.parseDouble(tfPrice.getText()));
                        String rs = veBLL.addVegetable(veg);
                        JOptionPane.showMessageDialog(null, rs);
                        this.loadData();

                    } catch (Exception e) {
                        System.out.println(e);
                        JOptionPane.showMessageDialog(null, e);
                    }
                }

            }
        } else {
            JOptionPane.showMessageDialog(null, "Chỉ cập nhật số lượng");
             if(Integer.parseInt(tfAmount.getText()) <= 0 || Double.parseDouble(tfPrice.getText()) <= 0)
                {
                    JOptionPane.showMessageDialog(null,"Giá trị không hợp lệ < 0");
                    
                }
             else
             {
                  int amount = Integer.parseInt(tfAmount.getText());
                    Vegetable veg = (Vegetable) veBLL.getVegetablebyName(name).get(0);
                    veg.setAmount(amount + veg.getAmount());
                    String rs = veBLL.updateVegetable(veg);
                    JOptionPane.showMessageDialog(null, rs);
                    this.loadData();
             }
          

        }
 
        
    }//GEN-LAST:event_btnimportActionPerformed
    private  void loadcbx()
    {  
        this.cbx.removeAllItems();
        this.cbx.setBounds(100, 80, 210, 30);
        List listCate = this.categoryBLL.loadCategory();
        for(Object i :listCate)
        {
            this.cbx.addItem(i.toString());
            
        }
    }
    private void btnexitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnexitActionPerformed
        // TODO add your handling code here
        System.exit(0);
    }//GEN-LAST:event_btnexitActionPerformed

    private void tfNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfNameActionPerformed

    private void tfAmountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfAmountActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfAmountActionPerformed

    private void tfUnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfUnitActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfUnitActionPerformed

    private void tfPriceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfPriceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfPriceActionPerformed

    private void btnfindActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnfindActionPerformed
        // TODO add your handling code here:
        List<Vegetable> find = veBLL.find(tffind.getText().trim()+"");
         table.setRowCount(0);
                for (int i = 0; i < find.size(); i++) {
                Vegetable vegetableDTO = find.get(i);
                int vegetableID = vegetableDTO.getVegetableID();
                String categoryName = vegetableDTO.getCatagory().getName();
                String name = vegetableDTO.getVegetableName();
                String Unit = vegetableDTO.getUnit();
                String Amount = vegetableDTO.getAmount()+"";
                String Price = vegetableDTO.getPrice()+"";
                String image = vegetableDTO.getImage();
                Object[] row = {vegetableID, categoryName, name, Unit, Amount, Price,image};
                table.addRow(row);
                 }
        
        tbVegetable.setModel(table);
        
        tbVegetable.setRowHeight(25);
        tbVegetable.getTableHeader().setFont(new Font("Courier New",Font.PLAIN,16));
        tbVegetable.getTableHeader().setBackground(new Color(17,185,255));
        
    }//GEN-LAST:event_btnfindActionPerformed

    private void btnaddcategoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnaddcategoryActionPerformed

        CategoryForm cat = new CategoryForm();
        cat.setVisible(true);
        
        
    }//GEN-LAST:event_btnaddcategoryActionPerformed

    private void tbVegetableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbVegetableMouseClicked
        // TODO add your handling code here:
        int i = tbVegetable.getSelectedRow();
        vegetableID = Integer.parseInt(tbVegetable.getValueAt(i, 0)+"");
        cbx.setSelectedItem(String.
                
                valueOf(tbVegetable.getValueAt(i,1)).trim());
        System.out.println(String.valueOf(tbVegetable.getValueAt(i,1)).trim());
        tfName.setText(tbVegetable.getValueAt(i, 2)+"");
        
        tfUnit.setText(""+ tbVegetable.getValueAt(i, 3));
        tfAmount.setText(""+ tbVegetable.getValueAt(i, 4));
        tfPrice.setText(""+ tbVegetable.getValueAt(i, 5));
        lbimage.setIcon(new ImageIcon(""+ tbVegetable.getValueAt(i, 6)));

        
    }//GEN-LAST:event_tbVegetableMouseClicked

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        this.loadData();
        this.loadcbx();
        this.vegetableID = 0;        
        tfName.setText("");
        cbx.setSelectedItem("");
        tfUnit.setText("");
        tfAmount.setText("");
        tfPrice.setText("");
        tfFile.setText("");
        lbimage.setIcon(new ImageIcon());
    }//GEN-LAST:event_jButton1ActionPerformed

    private void btndeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btndeleteActionPerformed
        // TODO add your handling code here:
        if(vegetableID != 0)
        { 
            try
            {
             int i =JOptionPane.showConfirmDialog(null, "bạn có muốn xóa?","Question", JOptionPane.YES_NO_OPTION);
             if(i==0)
             {
                Vegetable veg = veBLL.getVegetable(vegetableID);
                JOptionPane.showMessageDialog(null, veBLL.delVegetable(veg));
                this.loadData();
             }   
            }
            catch(Exception e)
            {
                JOptionPane.showMessageDialog(null, "Không thể xóa.");
            }    
        }
        else
        {
            JOptionPane.showMessageDialog(null, "Vui long chon sp can xoa");
        }

    }//GEN-LAST:event_btndeleteActionPerformed
    public String cutPath(String s)
    {
        StringTokenizer st = new StringTokenizer ( s, "\\" );
        String [] path = new String [st.countTokens()];
        int i =0;
        while(st.hasMoreTokens())
        {
           path[i] = st.nextToken();
           i++;

        }
        return path[path.length-2]+"\\"+path[path.length-1];
    }
    private void btnChooseFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnChooseFileActionPerformed
        // TODO add your handling code here:
          JFileChooser fileChooser = new JFileChooser();
	         fileChooser.setCurrentDirectory(new File("Images"));
	         FileNameExtensionFilter filter = new FileNameExtensionFilter("*.IMAGE", "jpg","gif","png");
                 // làm sao để di chuyển file đó đến Images
	         fileChooser.addChoosableFileFilter(filter);
	         int result = fileChooser.showSaveDialog(null);
	         if(result == JFileChooser.APPROVE_OPTION){
	        	tfFile.setVisible(true);
                        tfFile.setEditable(false);
                        
	        	tfFile.setText(this.cutPath(fileChooser.getSelectedFile().toString()));
                        lbimage.setIcon(new ImageIcon(fileChooser.getSelectedFile().toString()));
                 }
    }//GEN-LAST:event_btnChooseFileActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NhapHang.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NhapHang.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NhapHang.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NhapHang.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            NhapHang a = new NhapHang();

        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnChooseFile;
    private javax.swing.JButton btnaddcategory;
    private javax.swing.JButton btndelete;
    private javax.swing.JButton btnexit;
    private javax.swing.JButton btnfind;
    private javax.swing.JButton btnimport;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lbimage;
    private javax.swing.JTable tbVegetable;
    private javax.swing.JTextField tfAmount;
    private javax.swing.JTextField tfFile;
    private javax.swing.JTextField tfName;
    private javax.swing.JTextField tfPrice;
    private javax.swing.JTextField tfUnit;
    private javax.swing.JTextField tffind;
    // End of variables declaration//GEN-END:variables
}
